#!/usr/bin/env bash

# shellcheck source-path=SCRIPTDIR
source "$(dirname "$0")/exec-env"
export PATH="$CARGO_HOME/bin:$ASDF_INSTALL_PATH/bin:$PATH"

install_rust() {
    local rustc
    local arguments=(
        --no-self-update
        ${ASDF_RUST_PROFILE:+--profile="$ASDF_RUST_PROFILE"}
        ${ASDF_RUST_TARGETS:+--target="$ASDF_RUST_TARGETS"}
        ${ASDF_RUST_COMPONENTS:+--component="$ASDF_RUST_COMPONENTS"}
    )

    if echo "$ASDF_INSTALL_VERSION" | grep -q "^nightly"; then
        # Allow rustup to downgrade the toolchain to satisfy your component choice
        # Needed because nightly doesn't always build all components
        arguments+=(--allow-downgrade)
    fi

    arguments+=("$ASDF_INSTALL_VERSION")

    # shellcheck disable=SC2086
    rustup toolchain install "${arguments[@]}" || return
    rustc=$(RUSTUP_TOOLCHAIN="$ASDF_INSTALL_VERSION" rustup which rustc)
    rmdir "$ASDF_INSTALL_PATH" &&
        ln -s "$($rustc --print sysroot)" "$ASDF_INSTALL_PATH"
}

install_default_cargo_packages() {
    local default_cargo_packages_file="${ASDF_CRATE_DEFAULT_PACKAGES_FILE:-$HOME/.default-cargo-crates}" filtered_packages=

    if [ -f "$default_cargo_packages_file" ]; then
        echo -ne "\nInstalling default cargo packages..."

        filtered_packages=$(grep -vE "^\s*#" <"$default_cargo_packages_file")
        xargs cargo install <<<"$filtered_packages"
    fi
}

install_rust &&
    install_default_cargo_packages
